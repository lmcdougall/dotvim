alias progressbar='pv $*'
alias archey='archey -c'
alias df='df -h $*'
alias du='du -h $*'
alias ll='CLICOLOR_FORCE=1 ls'
alias less='less -R'
alias cp='cp -i'
alias h='history'
alias la='CLICOLOR_FORCE=1 ls -a'
alias lsc='CLICOLOR_FORCE=1 ls -G'
#alias lsd="CLICOLOR_FORCE=1 ls -l $*|egrep '^d'"
alias lsl="CLICOLOR_FORCE=1 ls -l -G $*|egrep '^l'"
#alias lsf="CLICOLOR_FORCE=1 ls -l -G $*|egrep -v '^d'"
alias knock='~/bin/knock.py'
alias llogin='~/bin/llogin'
alias hosts='cat /etc/hosts'
alias vimmigrate='gvim db/migrate/$(ls db/migrate |tail -n 1)'
alias rs='rails s --binding=0.0.0.0'

if [[ $OSTYPE =~ "darwin" ]]
then
    alias laravel='~/.composer/vendor/bin/laravel'
    alias gvim='~/bin/gvim'
#    alias vim='/Applications/MacVim.app/Contents/MacOS/Vim'
    alias msql='mysql.server start'
    alias mstart='sudo nohup /opt/local/bin/mysqld_safe5 &'
    alias mstop='/opt/local/bin/mysqladmin5 -u root -p shutdown'
    alias vi='vim'
    alias mate2='/usr/local/bin/mate $* '
    alias mate='/usr/bin/mate $* '
    alias emacs="/Applications/Emacs.app/Contents/MacOS/Emacs $* &"
    alias src='cd  /Users/luis/Development/rails/source'
    alias develop='cd /Users/luis/Development/rails/'
    alias lynda='cd ~/Downloads/lynda'
else

    echo "we are in " $OSTYPE
fi
alias print_man='man $1 -t > man.ps'
alias scpresume='rsync --partial --progress --rsh=ssh'
alias luis='ssh -C luis'
alias rsync='rsync -Pavur'
alias gitpush='git push -u origin $1'
alias gitremote='git checkout -b $1 origin/$1'
alias gl='git log --oneline --all --graph --decorate'
alias gemset="rbenv gemset  $*"
alias gitk='gitk --all'
alias rb='rbenv'
alias rp='rails s -e production'
alias rd='rails s'
alias rc='rails c'
alias vd='youtube-dl'


##########
#Funtions#
##########


#function name ()
#{
#    if [[ $# == 0 ]] ; then
#        # do something
#    else
#       # do something 
#    fi
#}
#

# this script is for experimentation with zsh 
function mcdougall ()
{
    echo "exprimenting with if aguments and case"
    print $# $*
    if [[ $# == 0 ]]; then
        print Yellow is no colour.
    fi

#read var
#case var in
  case $# in
    (1) print Read yes 1
          ;;
    (2) print Read no 2
         ;;
    (*) print Read something else
        ;;
  esac


}

function tmuxf()
{
  if [[ $# == 0 ]]; then
    tmux new-session -n mcbook
  else
    tmux $*
  fi
}

## to verify chechsum string against a file.
function chkha1()
{
  if [[ $# != 2 ]]; then
    echo "USAGE: chkha1 file_name checksum_string"
  else
      openssl sha1 $1 |cut -d " " -f 2|read h1 
      if [ "$h1" = "$2" ]; then 
         echo "*** MATCHED, GOOD ***"
      else
         echo "*** WARNING DID NOT MATCH ***"
      fi
  fi
}

## Postgress server
function pg-server()
{
   if [[ $1 == 'start' ]]; then
    pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
   elif [[ $1 == 'stop' ]]; then
    pg_ctl -D /usr/local/var/postgres stop -s -m fast
   else
    echo "pg-server ([start|stop])" 
  fi
}

function rdev()
{
  if [[ $# != 0 ]]; then
    cd ~/Development/ruby/$1
  else
    cd ~/Development/ruby
  fi
}

function sshdev()
{
   if [[ $1 == 'root' ]]; then
      ssh root@198.199.86.163
   elif [[ $1 == 'dep' ]]; then
      ssh deployer@198.199.86.163
   else
     echo "sshdev [(root|dep)]" 
   fi
}


function rsynk()
{
    
  if [[ $# == 0 ]]; then
    echo "USAGE: rsynk -vaz source destination | rsync -h for more help"
  else
    \rsync $*
  fi
}

function scpmundo()
{
  scp $1 mundomcd@mundomcdougall.com:
}

fucntion chrome()
{
    open $@ --args --allow-file-access-from-files
}

funtion sdir()
{

  if [[ $# == 0 ]]; then
    echo "Plese provide at least one command"
   else
    $@ $(ls|sel)
  fi    
}

function cmanual()
{
    cd ~/Documents/Sites/Cmanual
    open index.html
}

function kvim()
{
    echo "bindkey -v" 
}


function today
{
    #ruby -e 'p Time.now.asctime '
    idate=$(date)
    day=$(date | cut -d ' ' -f 3)
    dow=$(date | cut -d ' ' -f 1)
    month=$(date | cut -d ' ' -f 2)
    year=$(date | cut -d ' ' -f 6)
    hr=$(date | cut -d ' ' -f 4)
    zone=$(date | cut -d ' ' -f 5)
   
    echo "$dow $month $day, $year @ $hr"

}

function animate
{ # use animate *.jpg
    convert -delay 55 -loop 0 $@  animated.gif
}
# git 
function git-alias
{
  alias | grep git
}
function git-last
{
     git log --name-status HEAD^..HEAD
}

function ruby-tapas
{ 
    # download_path="/Volumes/usbshare1-2/ruby-tapas" 
    if [ -d /Volumes/FASTDATA ]; then
        #$(cd /Volumes/FASTDATA/ruby-tapas-downloader; bundle exec bin/ruby-tapas-downloader $*)
        cd /Volumes/FASTDATA/ruby-tapas-downloader; bundle exec bin/ruby-tapas-downloader download; cd -
    else
        #$(cd /Volumes/usbshare1-2/ruby-tapas-downloader; bundel exec bin/ruby-tapas-downloader $*) 
        cd /Volumes/usbshare1-2/ruby-tapas-downloader; bundel exec bin/ruby-tapas-downloader download; cd -
    fi

}

function undocommit
{
    if [ -d .git ]; then
        read yes'?Are you sure[y/n]:'
        if [[ $yes = y ]]; then    
            git reset --soft 'HEAD^'
            git reset .
        else
           print woof, you almost did it!
        fi
    else
      echo You must be in a git repository for this to work
     return
    fi;

  #if [[ $# == 0 ]]; then
  #  echo "undo git by doing git reset --soft 'HEAD^';git reset ."
  #fi    
}

function encrypt
{
  if [[ $# == 0 ]]; then
    echo "USAGE: encrypt fileName fileNameOfEncripted"
  elif [[ $# == 1 ]]; then
      if [[ -a $1 ]]; then
        openssl des3 -salt -out "$1.enc" -in $1 
      else
        echo "$1 does not exist"
      fi
  else
    echo "encrypt with no arguments for help"
  fi
}

function decrypt
{
  if [[ $# == 0 ]]; then
    echo "USAGE: decrypt fileName [-t]"
  else
      if [[ -a $1 ]]; then
        file=$1
        filename="${file%.*}"
        if [[ $# == 1 ]]; then
            openssl des3 -salt -d -out "$filename" -in $1 
        elif  [[ $# == 2 ]]; then
            openssl des3 -salt -d  -in $1 
        fi
      else
        echo "$1 does not exist"
      fi
  fi
}

function gitsrevs
{
    git rev-list --reverse HEAD |
    while read rev; do
      git log --oneline -1 $rev
    #  git ls-tree -r $rev
    done
}

function lyndad 
{
    youtube-dl -f best $1 --username 5390593.6785956 --password 2pYoq8Yh
}

function downlydia
{
    youtube-dl -f best $1 --username luismcdougall@gmail.com --password meph3cEe
}

# -------------------------------------------------------------------
# compressed file expander 
# (from https://github.com/myfreeweb/zshuery/blob/master/zshuery.sh)
# -------------------------------------------------------------------
function ex() {
    if [[ -f $1 ]]; then
        case $1 in
          *.tar.bz2) tar xvjf $1;;
          *.tar.gz) tar xvzf $1;;
          *.tar.xz) tar xvJf $1;;
          *.tar.lzma) tar --lzma xvf $1;;
          *.bz2) bunzip $1;;
          *.rar) unrar $1;;
          *.gz) gunzip $1;;
          *.tar) tar xvf $1;;
          *.tbz2) tar xvjf $1;;
          *.tgz) tar xvzf $1;;
          *.zip) unzip $1;;
          *.Z) uncompress $1;;
          *.7z) 7z x $1;;
          *.dmg) hdiutul mount $1;; # mount OS X disk images
          *) echo "'$1' cannot be extracted via >ex<";;
    esac
    else
        echo "'$1' is not a valid file"
    fi
}

# Print man page to a ps file and open in priview .
function pman() {
     ps=`mktemp -t manpageXXXX`.ps 
     man -t $@ > "$ps" 
     open "$ps"
 }

#switch to vi key actions
function svim() { bindkey -v }
#switch to emacs key actions
function semacs() { bindkey -e }

function gotapas() {
    
    if [ -d /Volumes/FASTDATA ]; then
        cd /Volumes/FASTDATA/ruby-tapas
    else
        cd /Volumes/usbshare1-2/ruby-tapas
    fi
}

function lsd(){
    # if a '-' is passed then 
    if [[ $1 == '-' ]] ; then
        shift
        #CLICOLOR_FORCE=1 ls -l  -G $*|egrep '^d' | awk '{printf $1 " "substr($0, index($0,$9)) " \n" }'
        
        if [[ $OSTYPE =~ "darwin" ]]
        then
            CLICOLOR_FORCE=1 ls -l  -G $*|egrep '^d' | awk '{printf $9 "\n"}'
        else
            CLICOLOR_FORCE=1 ls -l  -G $*|egrep '^d' | awk '{printf $8 "\n"}'
        fi
   else
        CLICOLOR_FORCE=1 ls -l  -G $*|egrep '^d' 
   fi

}

fucntion lsf() {
   if [[ $1 == '-' ]] ; then
        shift
        if [[ $OSTYPE =~ "darwin" ]]
        then
            CLICOLOR_FORCE=1 ls -l  -G $*|egrep -v '^d' | awk '{printf $9 "\n" }' 
        else
            CLICOLOR_FORCE=1 ls -l  -G $*|egrep -v '^d' | awk '{printf $8 "\n" }'
        fi
   else
        CLICOLOR_FORCE=1 ls -l  -G $*|egrep -v '^d' 
   fi
}

function code(){
    cd /Users/luis/Development/ruby/code
}

functions luisdata(){
    cd /Volumes/LuisData
}

function duration() {
    ffprobe -i $1 2>&1 | grep -i duration
}

function filename {
    cat ~/bin/filename.txt
}

funciontion vim-last-migration() {
  if [ -d db/migrate/ ]; then
    vim db/migrate/$(ls db/migrate/ | tail -n 1)
  else
    echo "** you are not in a rails project"
  fi
}

function lsmovies() {
# the problem here is that if one of the paterns
# do no exist the whole thing fail.
    ls *.(mov|mp4|webm)
}

if [[ $OSTYPE =~ "darwin" ]]
then

    function showHidden() { # toggle finder showing hidden files 
        hiden=$(defaults read com.apple.finder AppleShowAllFiles) 
        if [[ $hiden -eq 0 ]] 
        then
            defaults write com.apple.finder AppleShowAllFiles 1; killall Finder 
        else
            defaults write com.apple.finder AppleShowAllFiles 0; killall Finder 
        fi
    }
fi

function md1
{
    mkdir -p $1
    cd $1
}

function elixir-tapas
{ 
    # download_path="/Volumes/usbshare1-2/ruby-tapas" 
    if [ -d  /Volumes/FASTDATA ]; then
        #$(cd /Volumes/FASTDATA/ruby-tapas-downloader; bundle exec bin/ruby-tapas-downloader $*)
        cd /Volumes/FASTDATA/elixirsips; /Users/luis/bin/elixir-downloader; cd -
    else
        #$(cd /Volumes/usbshare1-2/ruby-tapas-downloader; bundel exec bin/ruby-tapas-downloader $*) 
    fi

}

# function 
# {
#   user=$1
#   ip=$2
#   sudo ~/bin/sshuttle/sshuttle -N -vvr $user@$ip 0/0
# {
alias md='md1 $1'
